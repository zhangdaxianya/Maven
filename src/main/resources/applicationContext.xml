<?xml version="1.0" encoding="utf-8" ?>

<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


    <!--加载properties配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!--datasource数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--指定数据库的连接信息-->
        <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
        <property name="url" value="jdbc:sqlserver://192.168.18.254:1433;DatabaseName=KuaiKe"/>
        <property name="username" value="sa"/>
        <property name="password" value="a123"/>
    </bean>

    <!--sqlsessionfactory对象-->
    <bean id="sessionFaction" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 获取数据源 -->
        <property name="dataSource" ref="dataSource"></property>

        <!-- 指定类型别名的包 -->
        <property name="typeAliasesPackage" value="net.dgsr.model"/>


        <!-- 指定要加载的sql映射文件的位置 -->
        <property name="mapperLocations" value="classpath:dao/*.xml"/>

        <!-- 分页显示 -->
        <!--<property name="plugins">-->
            <!--<array>-->
                <!--<bean class="com.github.pagehelper.PageInterceptor">-->
                    <!--&lt;!&ndash; 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 &ndash;&gt;-->
                    <!--<property name="properties">-->
                        <!--<value>-->
                            <!--helperDialect=mysql-->
                            <!--reasonable=true-->
                            <!--supportMethodsArguments=true-->
                            <!--params=count=countSql-->
                            <!--autoRuntimeDialect=true-->
                        <!--</value>-->
                    <!--</property>-->
                <!--</bean>-->
            <!--</array>-->
        <!--</property>-->
    </bean>

    <!--自动扫描dao层接口的配置-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="net.dgsr.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sessionFaction"/>
    </bean>

    <!-- 使用注解方式创建service接口对象 -->
    <context:component-scan base-package="net.dgsr.service" >
        <!-- 排除掉Controller类的注解 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--事物管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 指定数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--事物规则-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 指定说以 insert update del 开头的需要事务  其他的不用 -->
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="del*" propagation="REQUIRED" read-only="false"/>
        </tx:attributes>
    </tx:advice>

    <!--事物织入 -->
    <aop:config>
        <!-- 定义切入点 什么样的类里面的方法需要事务 -->
        <aop:pointcut expression="execution(* net.dgsr.service.*.*(..))" id="servicePointcut"/>

        <!-- 织入事务  表示在servicePointcut下面织入txAdvice事务处理-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut"/>
    </aop:config>

</beans>